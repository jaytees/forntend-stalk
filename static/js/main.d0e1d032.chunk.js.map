{"version":3,"sources":["serviceWorker.js","components/LastWatered.js","components/BurgerMenu/BurgerMenu.js","components/Users.js","components/Home.js","SignUp.js","components/ProfilePage.js","components/GardenDisplay/MyGarden.js","components/Photo.js","components/AddPlant.js","components/EditPlant.js","LoginForm.js","LogOut.js","components/NavBar/NavBar.js","components/PlantCalendar.js","components/Upload.js","components/AddPhoto.js","components/EditPhoto.js","components/Following.js","components/Plant.js","components/Time.js","components/LandingPage.js","StalkApp.js","index.js"],"names":["Boolean","window","location","hostname","match","LastWatered","props","useState","watered","setWatered","className","onClick","plant_id","lastWatered","Math","floor","Date","now","url","console","log","axios","put","plant","last_watered","headers","Accept","then","res","status","catch","err","warn","waterPlant","id","date","seconds","interval","timeSince","BurgerMenu","history","useHistory","type","key","plantID","route","push","handleEditClick","plantId","delete","handleDeleteClick","handleAddPhotoClick","Users","state","users","handleClick","get","setState","data","this","length","map","user","username","plants","src","photos","image","alt","name","React","Component","Home","SignUp","useReducer","newState","email","password","password_confirmation","setUser","errors","setErrors","handleChange","event","target","newValue","value","error","onSubmit","preventDefault","post","jwt","localStorage","setItem","defaults","common","messageCreator","Object","keys","resetState","response","onChange","placeholder","ProfilePage","getItem","notificationId","notifications","currentDate","moment","hours","minutes","forEach","acquiredDate","date_acquired","diff","water_days","store","addNotification","title","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","pauseOnHover","n","removeNotification","to","userIDQuery","MyGarden","token","params","user_id","photo","userID","Photo","photoIDQuery","photo_id","description","AddPlant","evt","handleSubmit","action","EditPlant","plantInfo","defaultValue","planttype","LoginForm","setEmail","setPassword","loginMessage","failure","loginDisplay","LogOut","removeItem","logOutMessage","NavBar","loginFormDisplayed","setLoginFormDisplayed","displayLogin","navMessage","tokenHeaderValue","href","PlantCalendar","userId","datesArray","calculate","plantName","startDate","waterInterval","currMonthStart","setHours","setMinutes","dateDiff","offset","firstScheduleDt","add","toDate","nextScheduleDt","datesArrayCopy","getMonth","calendarEntry","allDay","start","end","getTime","monthsChangeHandler","getDate","setDate","setMonth","monthStartDate","events","localizer","momentLocalizer","style","height","onRangeChange","Upload","image_url","uploadWidget","cloudinary","openUploadWidget","cloud_name","upload_preset","tags","result","onImageUpload","maxWidth","AddPhoto","handleImageUploaded","imageURL","class","photoID","EditPhoto","Following","userfollows","follow","plantIDQuery","Plant","Time","watering","plantIndex","plantsCopy","index","LandingPage","autoPlay","loop","muted","StalkApp","tokenHeaderSet","setTokenHeaderSet","welcomeMessage","setWelcomeMessage","handleUserStatus","tokenValue","useEffect","exact","path","component","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0e1d032.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./LastWatered.css\";\n\nfunction LastWatered(props) {\n  const [watered, setWatered] = useState(false);\n\n  const timeSince = date => {\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var interval = Math.floor(seconds / 31536000);\n    if (interval > 1) {\n      return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n      return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n      return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n      return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n      return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n  };\n\n  const waterPlant = plant_id => {\n    const lastWatered = Math.floor(Date.now() / 1000);\n\n    let url = \"\";\n    if (process.env.NODE_ENV !== \"production\") {\n      url = \"http://localhost:3000\";\n    } else {\n      url = \"https://backend-stalk.herokuapp.com\";\n    }\n    console.log(\"url\", url);\n    axios\n      .put(`${url}/plants/${plant_id}.json`, {\n        plant: {\n          last_watered: lastWatered\n        },\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(res => {\n        console.log(\"res:\", res);\n        if (res.status === 200) {\n          setWatered(true);\n        }\n      })\n      .catch(err => {\n        console.warn(\"err:\", err);\n      });\n  };\n\n  // timeSince(new Date(props.plant.last_watered * 1000)) === \"0 seconds\"\n\n  return (\n    <div className=\"waterPlant\">\n      <div className=\"waterPlant-droplet\">\n        <div\n          className=\"droplet\"\n          onClick={() => waterPlant(props.plant.id)}\n        ></div>\n      </div>\n      {watered ? (\n        <div className=\"waterPlant-text\">\n          <p id={props.plant.id}>Just Watered!</p>\n        </div>\n      ) : (\n        <div>\n          <div className=\"waterPlant-text\">\n            {\n              <p id={props.plant.id}>\n                Last Watered{\" \"}\n                {timeSince(new Date(props.plant.last_watered * 1000))} Ago{\" \"}\n              </p>\n            }\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LastWatered;\n","import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport axios from 'axios'\n\nimport './BurgerMenu.css'\n\nfunction BurgerMenu(props){\n  let history = useHistory();\n\n\n  const handleDeleteClick = ( id ) => {\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n\n    axios.delete(`${url}/plants/${id}.json`)\n    .then(res => {\n      // console.log(res);\n    })\n    .catch( err => console.log(err));\n  };\n\n  const handleEditClick = ( plantID ) => {\n\n      const route = `/editplant/${ plantID }`\n\n      history.push( route )\n  };\n\n\n  const handleAddPhotoClick = ( plantID ) => {\n\n    const route = `/addphoto/${ plantID }`\n\n    history.push( route )\n  }\n\n\n\n\n\n  return(\n    <div>\n        <div id=\"menuToggle\">\n\n          <input type=\"checkbox\" />\n\n\n          <span className=\"forIcon\"></span>\n          <span className=\"forIcon\"></span>\n          <span className=\"forIcon\"></span>\n\n\n          <ul id=\"menu\">\n            <li key='edit' onClick={() => handleEditClick(props.plantId)}>Edit</li>\n\n            <li key='delete' onClick={() => handleDeleteClick(props.plantId)}>Delete</li>\n\n            <li key='add' onClick={() => handleAddPhotoClick(props.plantId)}>Add Photo</li>\n\n          </ul>\n        </div>\n\n\n\n    </div>\n\n\n  )\n\n\n}\n\nexport default BurgerMenu\n","import React from 'react'\nimport axios from 'axios'\n\nimport './GardenDisplay/GardenDisplay.css'\n\nimport LastWatered from './LastWatered'\nimport BurgerMenu from './BurgerMenu/BurgerMenu'\n\nclass Users extends React.Component {\n\n  state = {\n    users: []\n  }\n\n  handleClick = ( id ) => {\n\n    const route = `/mygarden/${ id }`\n\n    this.props.history.push( route )\n}\n\n\n  componentDidMount(){\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n    axios.get(`${url}/users.json`)\n\n    .then(res => {\n      this.setState({users: res.data.users})\n    })\n    .catch(err => console.warn(err))\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <h2>Stalkers</h2>\n          {\n            this.state.users.length === 0\n            ?\n            <p>no users</p>\n            :\n            <div>\n            {\n              this.state.users.map( user =>\n\n                <div key={user.id} className=\"gardenItem\" onClick={() => this.handleClick(user.id)}>\n\n                  <div className=\"gardenItem-header\">\n\n                    {\n                    this.props.history.location !== \"/home\"\n                    ?\n                    <div>\n                      <div className=\"water-gardenItem\">\n                          <p>Click to View Full Garden!</p>\n                      </div>\n\n                      <div className=\"water-gardenItem\">\n\n                      </div>\n                    </div>\n                    :\n                    <div>\n                      <div className=\"water-gardenItem\">\n                          <LastWatered plant={user}/>\n                      </div>\n\n                      <div className=\"burger-menu-gardenItem\">\n                          <BurgerMenu plantId={user.id}/>\n                      </div>\n                    </div>\n                    }\n\n                      <div className=\"plant-name-gardenItem\">\n                          <p>{user.username}s garden</p>\n                      </div>\n\n\n\n                  </div>\n\n                  <div className=\"gardenItem-images\">\n                    {\n                      user.plants.map( plant =>\n\n                          <img src={plant.photos[0].image}  key={plant.id} alt={plant.name} className=\"myGardenPlantPhoto\" onClick={() => this.handleClick(user.id)}/>\n\n\n                      )\n                    }\n                  </div>\n\n                  <div className=\"gardenItem-shelf\">\n                    <div className=\"skew-left\"></div>\n                    <div className=\"skew-right\"></div>\n                  </div>\n\n              </div>\n            )\n          }\n        </div>\n          }\n      </div>\n    )\n  }\n\n} // Class\n\nexport default Users\n","import React from 'react'\nimport Users from './Users'\n\nclass Home extends React.Component {\n\n  render(){\n    return(\n      <div>\n\n        <Users history={this.props.history}/>\n\n      </div>\n    )\n  }\n\n}\n\nexport default Home\n","import React, {useState, useReducer} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport axios from 'axios';\n\nimport './SignUp.css'\n\nfunction SignUp( props ){\n  const [user, setUser] = useReducer(\n    (state, newState) => ({...state, ...newState}),\n    {\n      name: '',\n      username: '',\n      location: '',\n      email: '',\n      password: '',\n      password_confirmation: ''\n    }\n  );\n  const history = useHistory();\n  const [errors, setErrors] = useState([]);\n\n\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const newValue = event.target.value;\n\n    setUser({[name]: newValue});\n\n  }\n\n  const resetState = (user) => {\n\n    Object.keys(user).map(key => user[key] = '')\n\n  }\n\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n    axios.post(`${url}/users`, {\n      user,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then( res => {\n      // console.log(res);\n      if (res.data.jwt) {\n\n        localStorage.setItem('token', res.data.jwt);\n        localStorage.setItem('userId', res.data.user.id);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.jwt}`;\n        props.messageCreator( true, res.data.user.name );\n\n        history.push('/profile')\n\n        setUser(resetState(user))\n\n      } else {\n\n        setErrors(res.data.errors)\n\n      }\n    })\n    .catch( (err) => {\n      // console.warn('catch', err.response.data.errors);\n      // displayErrors(err.response.data.errors)\n      setErrors(err.response.data.errors)\n    })\n\n  };\n\n  return(\n    <div className=\"formContainer\">\n      <h2 className=\"formTitle\">Sign up</h2>\n      {\n        (errors) && <div id=\"signup-errors\">\n          <ul>\n            {errors.map(error =>\n              <li>{error}</li>\n            )}\n          </ul>\n        </div>\n      }\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>Name:</label>\n          <br/>\n          <input value={user.name} onChange={handleChange} type=\"text\" name=\"name\" placeholder=\"name\"/>\n        </div>\n        <br/>\n\n      <div className=\"field\">\n          <label>Username:</label>\n          <br/>\n          <input value={user.username} onChange={handleChange} type=\"text\" name=\"username\" placeholder=\"username\"/>\n        </div>\n        <br/>\n\n        <div className=\"field\">\n          <label>Location:</label>\n          <br/>\n          <input value={user.location} onChange={handleChange} type=\"text\" name=\"location\" placeholder=\"location\"/>\n        </div>\n        <br/>\n\n        <div className=\"field\">\n          <label>Email:</label>\n          <br/>\n          <input value={user.email} onChange={handleChange} type=\"text\" name=\"email\" placeholder=\"email\"/>\n        </div>\n        <br/>\n\n        <div className=\"field\">\n          <label>Password:</label>\n          <br/>\n          <input value={user.password} onChange={handleChange} type=\"password\" name=\"password\" placeholder=\"password\"/>\n        </div>\n        <br/>\n\n        <div className=\"field\">\n          <label>Password Confirmation:</label>\n          <br/>\n          <input value={user.password_confirmation} onChange={handleChange} type=\"password\" name=\"password_confirmation\" placeholder=\"password confirmation\"/>\n        </div>\n        <br/>\n\n        <button className=\"formButton\" type=\"submit\">Submit</button>\n      </form>\n\n    </div>\n  )\n}\nexport default SignUp\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"react-notifications-component/dist/theme.css\";\nimport { store } from \"react-notifications-component\";\n\nclass ProfilePage extends React.Component {\n  state = {\n    id: localStorage.getItem(\"userId\"),\n    user: [],\n    notificationId: \"\",\n    notifications: []\n  };\n\n  componentDidMount() {\n    let url = \"\";\n    if (process.env.NODE_ENV !== \"production\") {\n      url = \"http://localhost:3000\";\n    } else {\n      url = \"https://backend-stalk.herokuapp.com\";\n    }\n\n    axios\n      .get(`${url}/users/${this.state.id}.json`)\n\n      .then(res => {\n        this.setState({ user: res.data });\n\n        const currentDate = moment()\n          .hours(0)\n          .minutes(0)\n          .seconds(0);\n\n        this.state.user.plants.forEach(plant => {\n          let acquiredDate = moment(plant.date_acquired);\n\n          // checks if any plants need to be watered today and gives notifications\n          if (currentDate.diff(acquiredDate, \"days\") % plant.water_days === 0) {\n            this.setState({\n              notificationId: store.addNotification({\n                title: \"Water me!\",\n                message: `I am ${plant.name}`,\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                  duration: 10000,\n                  onScreen: true,\n                  pauseOnHover: true\n                }\n              })\n            });\n\n            this.state.notifications.push(this.state.notificationId);\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    // console.log(\"UNMOUNT!!!\");\n    this.state.notifications.forEach(n => {\n      store.removeNotification(n);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"centered\">Profile Page for {this.state.user.name}</h2>\n        <div className=\"profileButtons\">\n          <Link to=\"/users\">\n            <div className=\"profileButton slide-top\">STALKERS</div>\n          </Link>\n          <Link to=\"/addplant\">\n            <div className=\"profileButton slide-top\">+PLANT</div>\n          </Link>\n          <Link to={`/mygarden/${this.state.user.id}`}>\n            <div className=\"profileButton slide-top\">MY GARDEN</div>\n          </Link>\n          <Link to={`/plantcalendar/${this.state.user.id}`}>\n            <div className=\"profileButton slide-top\">CALENDAR</div>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport BurgerMenu from \"./../BurgerMenu/BurgerMenu\";\nimport LastWatered from \"./../LastWatered.js\";\n\nimport \"./GardenDisplay.css\";\n\nlet userIDQuery = \"\";\n\nclass MyGarden extends React.Component {\n  state = {\n    user: []\n  };\n\n  handleClick = id => {\n    const route = `/photo/${id}`;\n\n    this.props.history.push(route);\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      // setTokenHeaderSet( true );\n    }\n    userIDQuery = this.props.match.params.user_id;\n\n    let url = \"\";\n    if (process.env.NODE_ENV !== \"production\") {\n      url = \"http://localhost:3000\";\n    } else {\n      url = \"https://backend-stalk.herokuapp.com\";\n    }\n\n    axios\n      .get(`${url}/users/${userIDQuery}.json`)\n      .then(res => {\n        this.setState({ user: res.data });\n      })\n      .catch(console.warn);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>{this.state.user.name}s Garden</h2>\n        {this.state.user.length === 0 ? (\n          <p>loading</p>\n        ) : (\n          <div>\n            {this.state.user.plants.map(plant => (\n              <div key={plant.id} className=\"gardenItem\">\n                <div className=\"gardenItem-header\">\n                  {this.state.user.id == localStorage.getItem(\"userId\") && (\n                    <div>\n                      <div className=\"water-gardenItem\">\n                        <LastWatered plant={plant} />\n                      </div>\n\n                      <div className=\"burger-menu-gardenItem\">\n                        <BurgerMenu plantId={plant.id} />\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"plant-name-gardenItem\">\n                    <p>{plant.name}</p>\n                  </div>\n                </div>\n\n                <div className=\"gardenItem-images\">\n                  {plant.photos.map(photo => (\n                    <img\n                      src={photo.image}\n                      key={photo.id}\n                      alt={plant.name}\n                      className=\"myGardenPlantPhoto\"\n                      onClick={() => this.handleClick(photo.id)}\n                    />\n                  ))}\n                </div>\n\n                <div className=\"gardenItem-shelf\">\n                  <div className=\"skew-left\"></div>\n                  <div className=\"skew-right\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n} // Class\n\nexport default MyGarden;\n","import React from 'react'\nimport axios from 'axios'\n\nconst userID = localStorage.getItem('userId')\n\nclass Photo extends React.Component {\n\n  state = {\n    photo: []\n  }\n\n  handleDeleteClick = ( id ) => {\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n    axios.delete(`${url}/photos/${id}.json`)\n    .then(res => {\n      console.log(res);\n    })\n    .then(this.props.history.push(`/mygarden/${userID}`))\n    .catch( err => console.warn(err))\n  }\n\n  handleEditClick = ( id ) => {\n\n    const route = `/editphoto/${ id }`\n\n    this.props.history.push( route )\n  }\n\n  componentDidMount(){\n    const photoIDQuery = this.props.match.params.photo_id\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n\n    axios.get(`${url}/photos/${photoIDQuery}.json`)\n    .then(res => {\n\n      this.setState({photo: res.data})\n\n    })\n    .catch(console.warn)\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <div className=\"displayPhoto\">\n        <img className=\"mainPhoto\" src={this.state.photo.image} alt=\"\"/>\n        <p>{this.state.photo.name} - {this.state.photo.description}</p>\n        <div className=\"profileButtons\">\n          <div className=\"centerText formButton slide-top smallerButton\" onClick={() => this.handleDeleteClick(this.state.photo.id)}>DELETE</div>\n          <div className=\"centerText formButton slide-top smallerButton\" onClick={() => this.handleEditClick(this.state.photo.id)}>EDIT</div>\n        </div>\n        </div>\n      </div>\n    )\n  }\n\n} // Class\n\nexport default Photo\n","import React from 'react'\nimport axios from 'axios'\n\nconst userID = localStorage.getItem('userId')\n\nclass AddPlant extends React.Component {\n\n  //must be logged in to create a plant - render error if not logged in\n  state = {\n    user_id: localStorage.getItem('userId'),\n  }\n\n  handleChange = ( evt ) => {\n    this.setState({ [evt.target.name] : evt.target.value })\n  }\n\n  componentDidMount(){\n    console.log('user_id:', userID);\n  }\n\n\n  handleSubmit = ( event ) => {\n    event.preventDefault();\n\n    const plant = { plant:  this.state }\n\n    axios.post('http://localhost:3000/plants.json', plant )\n      .then(this.props.history.push(`/mygarden/${userID}`))\n      .catch( err => console.warn( err ))\n  } // end of handleSubmit\n\n\n  render(){\n    return(\n      <div className='App'>\n        <h2>AddPlant</h2>\n        <form action=\"\" onSubmit={this.handleSubmit}>\n            <label>Plant Type</label>\n            <input type=\"text\" name=\"planttype\" onChange={this.handleChange}/> <br/>\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" onChange={this.handleChange}/> <br/>\n\n            <label>About your plant:</label>\n            <input type=\"text\" name=\"description\" onChange={this.handleChange}/> <br/>\n\n            <label>Date Acquired</label>\n            <input type=\"date\" name=\"date_acquired\" onChange={this.handleChange}/> <br/>\n\n            <label>Days between watering</label>\n            <input type=\"text\" name=\"water_days\" onChange={this.handleChange}/> <br/>\n\n            <input type=\"submit\"/>\n        </form>\n      </div>\n    )\n  }\n\n} // Class\n\nexport default AddPlant\n","import React from 'react'\nimport axios from 'axios'\n\nconst userID = localStorage.getItem('userId')\n\n\nclass EditPlant extends React.Component {\n\n  //must be logged in to create a plant - render error if not logged in\n  state = {\n    user_id: localStorage.getItem('userId'),\n    plant: []\n  }\n\n  handleChange = ( evt ) => {\n    this.setState({ [evt.target.name] : evt.target.value })\n  }\n\n  componentDidMount(){\n    let plantID = this.props.match.params.plant_id\n\n    axios.get(`http://localhost:3000/plants/${plantID}.json`)\n    .then(res => {\n      const plantInfo = res.data\n      this.setState({ plant: plantInfo })\n    })\n    .catch(err => console.warn(err))\n  }\n\n\n  handleSubmit = ( event ) => {\n    event.preventDefault();\n    let plantID = this.state.plant.id\n\n    const plant = this.state\n\n    axios.put(`http://localhost:3000/plants/${plantID}.json`, {\n      plant\n    })\n    .then(res => {\n      console.log(`res:`, res);\n    })\n    .then(this.props.history.push(`/mygarden/${userID}`))\n    .catch( err => console.warn(err))\n  } // end of handleSubmit\n\n\n  render(){\n    return(\n      <div className='formContainer'>\n        <h2 className=\"formTitle\">Edit {this.state.plant.name}</h2>\n        {\n          this.state.plant.length === 0\n          ?\n          'no'\n          :\n          <div></div>\n        }\n        <form action=\"\" onSubmit={this.handleSubmit}>\n            <label>Plant Type</label>\n            <input type=\"text\" name=\"planttype\" defaultValue={this.state.plant.planttype} onChange={this.handleChange}/> <br/>\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" defaultValue={this.state.plant.name} onChange={this.handleChange}/> <br/>\n\n            <label>About your plant:</label>\n            <input type=\"text\" name=\"description\" defaultValue={this.state.plant.description} onChange={this.handleChange}/> <br/>\n\n            <label>Date Acquired</label>\n            <input type=\"date\" name=\"date_acquired\" defaultValue={this.state.plant.date_acquired} onChange={this.handleChange}/> <br/>\n\n            <label>Days between watering</label>\n            <input type=\"text\" name=\"water_days\" defaultValue={this.state.plant.water_days} onChange={this.handleChange}/> <br/>\n\n            <input className=\"formButton\" type=\"submit\"/>\n        </form>\n      </div>\n    )\n  }\n\n} // Class\n\nexport default EditPlant\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\n\nimport './LoginForm.css'\n\nfunction LoginForm( props ){\n  const [email, setEmail] = useState(\"jordan@test.com\");\n  const [password, setPassword] = useState(\"chicken\");\n  const [errors, setErrors] = useState(\"\");\n  let history = useHistory();\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n\n//need to clean up, will send to page whatever response\n//conditional, only if jwt present\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    // console.log(email);\n    // console.log(password);\n    // console.log(event);\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n    console.log('url', url);\n      axios.post( `${url}/login`, {\n        email: email,\n        password: password,\n        headers: {\n         'Accept': 'application/json',\n         'Content-Type': 'application/json'\n        }\n      })\n      .then( res => {\n        // console.log( res );\n        if (res.data.jwt) {\n\n          localStorage.setItem('token', res.data.jwt);\n          localStorage.setItem('userId', res.data.user.id);\n          axios.defaults.headers.common['Authorization'] = `Bearer ${res.data.jwt}`;\n          props.loginMessage( true, res.data.user.name )\n\n          history.push('/profile')\n\n        } else {\n\n            setErrors(res.data.failure)\n            // console.log(error)\n\n        }\n      })\n      .catch( err => {\n        console.warn( err );\n      } );\n\n      setEmail(\"\")\n      setPassword(\"\")\n\n      props.loginDisplay()\n    }\n\n    // <h1>LOGIN</h1>\n    //\n    // <label>Email:</label>\n    // <label>Password:</label>\n\n  return(\n    <div>\n      {\n        (errors) && <p>{errors}</p>\n      }\n      <form id=\"login\" onSubmit={handleSubmit}>\n        <div id=\"login-inputs\">\n\n          <input value={email} onChange={handleEmailChange} type=\"text\" placeholder=\"Your email address\"/>\n\n\n          <input value={password} onChange={handlePasswordChange} type=\"password\" placeholder=\"Password\"/>\n        </div>\n        <br/>\n\n        <button id=\"login-submit\" type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n\n\n\n}\n\nexport default LoginForm\n","import React from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nimport './components/NavBar/NavBar.css';\n\nfunction LogOut(props) {\n  let history = useHistory()\n\n  const logOutSubmit = () =>{\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    delete axios.defaults.headers.common['Authorization'];\n\n    props.logOutMessage( false, 'Please login or sign up' );\n\n    history.push('/home')\n\n  }\n\n  return(\n    <p onClick={logOutSubmit} id=\"logOut-link\">Log Out</p>\n  )\n\n}\n\nexport default LogOut\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoginForm from \"./../../LoginForm\";\nimport LogOut from \"./../../LogOut\";\n\nimport \"./NavBar.css\";\n\nfunction NavBar(props) {\n  const [loginFormDisplayed, setLoginFormDisplayed] = useState(false);\n\n  const displayLogin = () => {\n    !loginFormDisplayed\n      ? setLoginFormDisplayed(true)\n      : setLoginFormDisplayed(false);\n  };\n\n  return (\n    <div id=\"nav-div\">\n      <nav id=\"navbar\">\n        <p>{props.navMessage}</p>\n\n        {props.tokenHeaderValue ? (\n          <>\n            <Link to={\"/profile/\"}>\n              <p>Profile</p>\n            </Link>\n            <Link to={`/mygarden/${localStorage.getItem(\"userId\")}`}>\n              <p>Your Garden</p>\n            </Link>\n            <Link to={`/plantcalendar/${localStorage.getItem(\"userId\")}`}>\n              <p>Calendar</p>\n            </Link>\n            <LogOut logOutMessage={props.messageCreator} />\n          </>\n        ) : (\n          <div id=\"nav-login-operations\">\n            <p id=\"login-trigger\" href=\"#\" onClick={displayLogin}>\n              Log In\n            </p>\n\n            {loginFormDisplayed && (\n              <div id=\"login-content\">\n                <LoginForm\n                  loginMessage={props.messageCreator}\n                  loginDisplay={displayLogin}\n                />\n              </div>\n            )}\n\n            <Link to=\"/signup\" id=\"signup-link\">\n              Sign Up\n            </Link>\n          </div>\n        )}\n      </nav>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer  } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../App.css';\n\n\nclass PlantCalendar extends React.Component {\n\n  state = {\n    user: [],\n    userId: localStorage.getItem('userId'),\n    datesArray: []\n  }\n\n  componentDidMount(){\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n    axios.get(`${url}/users/${this.state.userId}.json`)\n    .then( res => {\n      this.setState({ user: res.data });\n      const monthStartDate = new Date();\n      monthStartDate.setDate(1);\n      res.data.plants.forEach(plant => {\n        // Water interval dates will be calculated when page is loaded.\n        this.calculate( plant.name, plant.date_acquired, plant.water_days, monthStartDate );\n      });\n    })\n    .catch(err => console.warn(err));\n  }\n\n  // This function calculates watering dates for plants considering plant acquired date\n  // and water interval.\n  calculate = (plantName, startDate, waterInterval, currMonthStart) => {\n\n    let acquiredDate = new Date(startDate);\n    acquiredDate.setHours(0);\n    acquiredDate.setMinutes(0);\n\n    // date difference between current month starting date and plant acquired date\n    let dateDiff = moment(currMonthStart).diff(moment(startDate),'days');\n\n    let offset = 0;\n    // loops until dateDiff is divisible by waterInterval\n    while((dateDiff % waterInterval) !== 0){\n      offset++; // incremented so that offset days are added to calculate first schedule date\n      dateDiff++;\n    }\n\n    // adds offset days to current month start date\n    let firstScheduleDt = moment(currMonthStart).add( offset, 'days' ).toDate();\n\n    let nextScheduleDt = firstScheduleDt;\n\n    const datesArrayCopy = [...this.state.datesArray];\n\n    // loops and calculates watering dates only for current month view.\n    while(nextScheduleDt.getMonth() === firstScheduleDt.getMonth()){\n\n      let calendarEntry = {\n        title: plantName,\n        allDay: true,\n        start: nextScheduleDt,\n        end: nextScheduleDt,\n      }\n      // Watering dates will be pushed into array only if nextScheduleDt is ahead of\n      // acquiredDate in a month.\n      if( nextScheduleDt.getTime() >= acquiredDate.getTime() ) {\n        datesArrayCopy.push(calendarEntry);\n      }\n      // waterInterval days will be added to nextScheduleDt to calculate next watering date.\n      nextScheduleDt = moment(nextScheduleDt).add(waterInterval, 'days').toDate();\n    }\n    this.setState({ datesArray: datesArrayCopy });\n  } // calculate\n\n  // This function is called to calculate watering dates of plants when month view is changed in Calendar.\n  monthsChangeHandler = (date) => {\n\n    this.setState({ datesArray: [] });\n\n    const startDate = new Date(date.start);\n\n    if(startDate.getDate() !== 1) {\n      startDate.setDate(1); // date is set to 1st of month w.r.t start date displayed on view.\n\n      // increments to next month so that current month in a view is considered to\n      // display watering dates.\n      startDate.setMonth(startDate.getMonth()+1);\n    }\n\n    this.state.user.plants.forEach(plant => {\n      this.calculate( plant.name, plant.date_acquired, plant.water_days, startDate );\n    });\n  } // monthsChangeHandler\n\n\n  render() {\n    return(\n      <div className=\"container\">\n          <Calendar\n            events={this.state.datesArray}\n            localizer={momentLocalizer(moment)}\n            style={{ height: '80vh' }}\n            onRangeChange={this.monthsChangeHandler}\n          />\n      </div>\n    );  // return\n  } // render\n} // PlantCalendar\n\nexport default PlantCalendar;\n","import React from 'react';\n// import {Image, Video} from 'cloudinary-react';\n\nclass Upload extends React.Component {\n\n  state = {\n    image_url: ''\n  };\n\n  uploadWidget = (event) => {\n\n    event.preventDefault();\n\n\n    window.cloudinary.openUploadWidget({\n\n      cloud_name: 'dlbfbi0rp', upload_preset: 'mtkzwbw5', tags:['plants']},\n      (error, result) => {\n          if(!error){\n\n            this.setState({ image_url: result[0].url });\n            this.props.onImageUpload(result[0].url);\n\n          } else {\n            console.warn('ERROR UPLOADING', error);\n          }\n      });\n\n  }\n\n  render(){\n    return (\n      <div>\n        <div className=\"upload\">\n                <button className=\"formButton\" onClick={this.uploadWidget}>\n\n                    Upload PLANT!\n                </button>\n                {\n                  this.state.image_url.length === 0\n                  ?\n                  <p>No Image</p>\n                  :\n                  <img className=\"uploadImagePreview\" src={this.state.image_url} alt=\"upload preview\" style={{maxWidth: '200px'}}/>\n                }\n            </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Upload;\n","import React from 'react'\nimport axios from 'axios'\nimport Upload from './Upload'\n\nlet plantID = ''\nconst userID = localStorage.getItem('userId')\n\nclass AddPhoto extends React.Component {\n\n  state = {\n    plant: [],\n    image: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name] : event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      photo: {\n        image: this.state.image,\n        description: this.state.description,\n        plant_id: plantID\n      }\n    })\n\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n\n    axios.post(`${url}/photos.json`, {\n      photo: {\n        image: this.state.image,\n        description: this.state.description,\n        plant_id: plantID\n      }\n    })\n    .then(this.props.history.push(`/mygarden/${userID}`))\n    .catch( err => console.warn(err))\n  }\n\n  uploadWidget = (event) => {\n    event.preventDefault()\n\n    window.cloudinary.openUploadWidget({\n\n      cloud_name: 'dlbfbi0rp', upload_preset: 'mtkzwbw5', tags:['plants']},\n      (error, result) => {\n          if(!error){\n\n            this.setState({ image: result[0].url });\n\n\n          } else {\n            console.warn('ERROR UPLOADING', error);\n          }\n      });\n  }\n\n  componentDidMount(){\n    plantID = this.props.match.params.plant_id\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n\n    axios.get(`${url}/plants/${plantID}.json`)\n    .then(res => {\n\n      this.setState({plant: res.data})\n    })\n    .catch( err => console.warn(err))\n\n    this.setState({plant_id : plantID })\n  }\n\n  handleImageUploaded = (imageURL) => {\n\n    this.setState({imageURL: imageURL});\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <h2>Add Photo of {this.state.plant.name}</h2>\n\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          <label>Description</label>\n          <input type=\"text\" name=\"description\" onChange={this.handleChange}/> <br/>\n          <label>ImageURL</label>\n          <input type=\"text\" name=\"imageURL\" value={ this.state.imageURL } onChange={this.handleChange}/> <br/>\n\n\n          <Upload onImageUpload={ this.handleImageUploaded }/>\n\n\n          <button className=\"formButton\">add update</button>\n\n        </form>\n        <div>\n          <div className=\"upload\">\n\n            {\n              this.state.image.length === 0\n              ?\n              <div>\n                <button className=\"formButton\" onClick={this.uploadWidget}>\n                  Upload Photo!\n                </button>\n              </div>\n              :\n              <div class=\"uploadPhoto\">\n                <p>Image Uploaded!</p>\n                <img className=\"uploadImagePreview\" src={this.state.image} alt=\"upload preview\"/>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n} // Class\n\nexport default AddPhoto\n","import React from 'react'\nimport axios from 'axios'\n\nlet photoID = ''\n\nclass EditPhoto extends React.Component {\n\n  state = {\n    photo: [],\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name] : event.target.value })\n    }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const photo = {\n\n        image: this.state.image,\n        description: this.state.description\n\n    }\n\n    axios.put(`http://localhost:3000/photos/${photoID}.json`, {\n      photo\n    })\n    .then(this.props.history.push(`/photo/${photoID}`))\n    .catch(err => console.warn(err))\n  }\n\n  componentDidMount(){\n    photoID = this.props.match.params.photo_id\n\n    axios.get(`http://localhost:3000/photos/${photoID}.json`)\n    .then(res => {\n\n      this.setState({photo: res.data})\n    })\n    .catch(console.warn)\n\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <h2>Edit Photo for {this.state.photo.name}</h2>\n\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          <label>Description</label>\n          <input type=\"text\" name=\"description\" defaultValue={this.state.photo.description} onChange={this.handleChange}/> <br/>\n          <label>ImageURL</label>\n          <input type=\"text\" name=\"image\" defaultValue={this.state.photo.image} onChange={this.handleChange}/> <br/>\n          <button>add update</button>\n        </form>\n      </div>\n    )\n  }\n\n} // Class\n\nexport default EditPhoto\n","import React from 'react'\nimport axios from 'axios'\nconst userID = localStorage.getItem('userId')\n\nclass Following extends React.Component {\n  state = {\n    user: [],\n    userfollows: []\n  }\n\n  handleClick = ( id ) => {\n\n    const route = `/photo/${ id }`\n\n    this.props.history.push( route )\n  }\n\n\n  componentDidMount(){\n    const token = localStorage.getItem('token')\n    if (token){\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n\n    axios.get(`${url}/users/${userID}.json`)\n      .then(res => {\n        this.setState({user: res.data})\n\n      })\n      .catch(err => console.warn(err))\n\n    axios.get(`${url}/follows/${userID}.json`)\n      .then(res => {\n\n        this.setState({userfollows: res.data})\n      })\n      .catch(err => console.warn(err))\n\n  }; //componentDidMount\n\n  render(){\n    return(\n      <div className='App'>\n        <h2>Following</h2>\n        <p></p>\n        {\n          this.state.userfollows.length === 0\n          ?\n          <p>loading</p>\n          :\n          <div>\n          {\n            this.state.userfollows.userfollows.map( follow =>\n\n              <div key={follow.id} className=\"gardenPlantIndex\">\n                <div className=\"skew-left\"></div>\n                <div className=\"skew-right\"></div>\n\n                  <div className=\"display-plant-name\">\n                  <p>{follow.name}</p>\n                  </div>\n\n                {\n                  follow.photos.map( photo =>\n                    <div className=\"image-box\" key={photo.id} onClick={() => this.handleClick(photo.id)}>\n                      <img className=\"myGardenPlantPhoto\" src={photo.image} alt=\"plant\"/>\n                    </div>\n                  )\n                }\n              </div>\n            )\n          }\n          </div>\n        }\n      </div>\n    )\n  }\n\n} // Class\n\nexport default Following\n","import React from 'react'\nimport axios from 'axios'\n\nlet plantIDQuery = ''\n\n\nclass Plant extends React.Component {\n\n  state = {\n    plant: []\n  }\n\n  componentDidMount(){\n    // console.log('this.props.match.params.user_id', this.props.match.params.user_id);\n    const token = localStorage.getItem('token')\n    if (token){\n      console.log('TOKEN FOUND!', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // setTokenHeaderSet( true );\n    }\n    plantIDQuery = this.props.match.params.plant_id\n    console.log(`plantIDQuery`, plantIDQuery);\n    let url = '';\n    if (process.env.NODE_ENV !== 'production') {\n      url = 'http://localhost:3000';\n    } else {\n      url = 'https://backend-stalk.herokuapp.com';\n    }\n    console.log('url', url);\n    axios.get(`${url}/plants/${plantIDQuery}.json`)\n    .then(res => {\n      console.log('res:', res);\n      this.setState({plant: res.data})\n      console.log('plant:', this.state.plant);\n    })\n    .catch(console.warn)\n  }\n\n  render(){\n    return(\n      <div className='App'>\n        <h2>Plant</h2>\n        <p>{this.state.plant.name} - {this.state.plant.planttype}</p> <br/>\n        {\n          this.state.plant.length === 0\n          ?\n          <p>loading...</p>\n          :\n          // <p>photos</p>\n          this.state.plant.photos.map( photo =>\n            <div key={photo.id}>\n              <img src={photo.image} alt=\"\"/>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n\n} // Class\n\nexport default Plant\n","import React from 'react'\nimport axios from 'axios'\n\nfunction timeSince(date) {\n  var seconds = Math.floor((new Date() - date) / 1000);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n// var aDay = 24*60*60*1000;\n\n\n\nclass Time extends React.Component {\n\n  state = {\n    plants: [],\n    watering: ''\n  }\n\n  waterPlant = ( plant_id, plantIndex ) => {\n\n    const lastWatered = (Math.floor(Date.now() / 1000))\n\n\n    axios.put(`http://localhost:3000/plants/${plant_id}.json`, {\n      plant: {\n        last_watered: lastWatered\n      },\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      console.log('res:', res);\n      if (res.status === 200) {\n        const plantsCopy = [...this.state.plants];\n        plantsCopy[plantIndex].last_watered = lastWatered\n        this.setState({plants: plantsCopy});\n      }\n    })\n    .catch(err =>{\n      console.warn('err:', err)\n    })\n  }\n\n\n\n  componentDidMount(){\n    axios.get(`http://localhost:3000/plants.json`)\n    .then(res => {\n      this.setState({plants: res.data.plants})\n      console.log('plants', this.state.plants);\n      // console.log(timeSince(new Date(Date.now()-aDay*2)));\n\n      // console.log(this.state.user.plants.length);\n    })\n    .catch(console.warn)\n  }\n\n\n\n  render(){\n    return(\n      <div className='App'>\n        <h1>Time</h1>\n        <h2>become a master of time and space</h2>\n          {\n            this.state.plants.length === 0\n            ?\n            <p>time is over</p>\n            :\n            <div>\n            <p>time is complete</p>\n            {\n            this.state.plants.map( (plant, index) =>\n              <div key={`plant${plant.id}`} className=\"gardenPlantIndex\">\n                <div className=\"skew-left\"></div>\n                <div className=\"skew-right\"></div>\n                <div className=\"display-plant-name\">\n                <p>{plant.name}</p>\n                </div>\n\n                {\n                  plant.photos.map( photo =>\n                    <div key={`photo${photo.id}`} className=\"image-box\" onClick={() => this.handleClick(photo.id)}>\n                      <img className=\"myGardenPlantPhoto\" src={photo.image} alt={plant.name}/>\n                    </div>\n                  )\n                }\n\n\n                <p>\n                  {\n                    timeSince(new Date( plant.last_watered * 1000) ) === '0 seconds'\n                    ?\n                    'watered!'\n                    :\n                    <p>Last Watered {timeSince(new Date( plant.last_watered * 1000) )} Hours Ago </p>\n                  }\n                </p>\n\n\n\n                <div onClick={() => this.waterPlant(plant.id, index)} className=\"waterPlant\">\n                <img src=\"/water.png\" alt=\"\"/>\n                </div>\n              </div>\n              )\n            }\n            </div>\n          }\n      </div>\n    )\n  }\n\n} // Class\n\nexport default Time\n\n// {timeSince(new Date( plant.last_watered * 1000) )} ago\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../App.css';\n\n\nclass LandingPage extends React.Component {\n\n  render(){\n    return(\n      <div className=\"landing-container\">\n          <div className=\"viewport-header text-focus-in\">\n            <h2><Link to='/home' className='home-link'> Stalk</Link></h2>\n          </div>\n\n            <video autoPlay loop muted>\n              <source src=\"photos/flowers1080p.mp4\" type=\"video/mp4\" />\n            </video>\n      </div>\n    );\n  } // render\n} // LandingPage\n\nexport default LandingPage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\nimport \"./components/NavBar/NavBar.css\";\nimport \"./Main.css\";\n\nimport Home from \"./components/Home\";\nimport SignUp from \"./SignUp\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport MyGarden from \"./components/GardenDisplay/MyGarden\";\nimport Users from \"./components/Users\";\nimport Photo from \"./components/Photo\";\nimport AddPlant from \"./components/AddPlant\";\nimport EditPlant from \"./components/EditPlant\";\n// import Upload from './components/Upload';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport PlantCalendar from \"./components/PlantCalendar\";\nimport AddPhoto from \"./components/AddPhoto\";\nimport EditPhoto from \"./components/EditPhoto\";\nimport Following from \"./components/Following\";\nimport Plant from \"./components/Plant\";\n\nimport Time from \"./components/Time\";\n\nimport LandingPage from \"./components/LandingPage\";\n\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\nfunction StalkApp() {\n  const [tokenHeaderSet, setTokenHeaderSet] = useState(false);\n  const [welcomeMessage, setWelcomeMessage] = useState(\n    \"Welcome, please login or sign up\"\n  );\n\n  const handleUserStatus = (tokenValue, name) => {\n    if (tokenValue) {\n      setWelcomeMessage(`Welcome back, ${name}`);\n      setTokenHeaderSet(true);\n    } else {\n      setWelcomeMessage(\"Welcome, Please login or sign up\");\n      setTokenHeaderSet(false);\n    }\n  };\n\n  //check token and set auth header from it\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // console.log('TOKEN FOUND!', token);\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      setTokenHeaderSet(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"stalk-app\">\n      <ReactNotification />\n\n      <main>\n        <div id=\"main-wrapper\">\n          <NavBar\n            tokenHeaderValue={tokenHeaderSet}\n            messageCreator={handleUserStatus}\n            navMessage={welcomeMessage}\n          />\n\n          <div id=\"main-logo\">\n            <h1 id=\"logo\">\n              <Link id=\"logo\" to=\"/users\">\n                Stalk\n              </Link>\n            </h1>\n          </div>\n\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/\" component={LandingPage} />\n\n            <Route\n              exact\n              path=\"/signup\"\n              render={props => (\n                <SignUp {...props} messageCreator={handleUserStatus} />\n              )}\n            />\n\n            {tokenHeaderSet && (\n              <Route exact path=\"/profile\" component={ProfilePage} />\n            )}\n\n            <Route exact path=\"/users\" component={Users} />\n\n            <Route\n              exact\n              path=\"/mygarden/:user_id\"\n              render={props => (\n                <MyGarden {...props} tokenHeaderValue={tokenHeaderSet} />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/plantcalendar/:user_id\"\n              component={PlantCalendar}\n            />\n\n            <Route exact path=\"/photo/:photo_id\" component={Photo} />\n            <Route exact path=\"/time/\" component={Time} />\n            <Route exact path=\"/addplant/\" component={AddPlant} />\n            <Route exact path=\"/editplant/:plant_id\" component={EditPlant} />\n            <Route exact path=\"/addphoto/:plant_id\" component={AddPhoto} />\n            <Route exact path=\"/editphoto/:photo_id\" component={EditPhoto} />\n            <Route exact path=\"/following/\" component={Following} />\n            <Route exact path=\"/plant/:plant_id\" component={Plant} />\n            <Route exact path=\"/uploadphoto\" component={Photo} />\n          </Switch>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default StalkApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport StalkApp from './StalkApp'\n\n\nReactDOM.render(\n  <HashRouter>\n    <StalkApp />\n  </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}